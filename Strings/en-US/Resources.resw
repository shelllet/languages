<?xml version='1.0' encoding='utf-8'?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing"
  mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework
  object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,
      Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,
      Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Language" xml:space="preserve">
    <value>Simplified chinese</value>
  </data>
  <data name="Add.Label" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Delete.Label" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Document.Text" xml:space="preserve">
    <value>The process has been modified. do you want to save?</value>
  </data>
  <data name="Recording.Title" xml:space="preserve">
    <value>Being recorded...</value>
  </data>
  <data name="Save.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Ok.Text" xml:space="preserve">
    <value>Determine</value>
  </data>
  <data name="Publish.Text" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="Stop.Text" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Simple.Text" xml:space="preserve">
    <value>Winui++</value>
    <comment>应用程序标题</comment>
  </data>
  <data name="Blank.Project.Text" xml:space="preserve">
    <value>Click 'new' to create the project</value>
  </data>
  <data name="Reminder.Text" xml:space="preserve">
    <value>Warm reminder</value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Version.Title.Text" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="Version.New" xml:space="preserve">
    <value>Discover new version: {}</value>
  </data>
  <data name="Home.Title.Text" xml:space="preserve">
    <value>Website:</value>
  </data>
  <data name="Registered.Text" xml:space="preserve">
    <value>Registered</value>
  </data>
  <data name="UnRegistered.Text" xml:space="preserve">
    <value>Unregistered</value>
  </data>
  <data name="Registered.To.Text" xml:space="preserve">
    <value>The current product is registered to:</value>
  </data>
  <data name="Blank.UserName.Text" xml:space="preserve">
    <value>User name:</value>
  </data>
  <data name="Blank.SerialNumber.Text" xml:space="preserve">
    <value>Serial number:</value>
  </data>
  <data name="History.Title" xml:space="preserve">
    <value>Historical record</value>
  </data>
  <data name="ActionItem.Open.Text" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="ActionItem.Visible.Text" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="ImagePreview.Button.Text" xml:space="preserve">
    <value>Determine</value>
  </data>
  <data name="ImagePreview.Title.Text" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Items.None" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="Settings.Basic.Content" xml:space="preserve">
    <value>Basic setting</value>
  </data>
  <data name="Settings.Shortcut.Content" xml:space="preserve">
    <value>Shortcut key setting</value>
  </data>
  <data name="Settings.Drawing.Content" xml:space="preserve">
    <value>Drawing</value>
  </data>
  <data name="Settings.Process.Content" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="Settings.Language.Header" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Settings.Theme.Header" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Settings.Sound.Header" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="Settings.RigisterFileType.Header" xml:space="preserve">
    <value>Association type</value>
  </data>
  <data name="Settings.Drawing.Thickness.Text" xml:space="preserve">
    <value>Border size</value>
  </data>
  <data name="Settings.Drawing.FontHeight.Text" xml:space="preserve">
    <value>Font size</value>
  </data>
  <data name="Settings.Color.Text" xml:space="preserve">
    <value>Foreview</value>
  </data>
  <data name="Settings.BackgroundColor.Text" xml:space="preserve">
    <value>Background color</value>
  </data>
  <data name="Settings.Process_Inference.Header" xml:space="preserve">
    <value>Model reasoning</value>
  </data>
  <data name="Settings.Basic_RandomTitle.Text" xml:space="preserve">
    <value>Random heading</value>
  </data>
  <data name="ProcessOptions.Header.Text" xml:space="preserve">
    <value>Item option</value>
  </data>
  <data name="ActionProperty.Header.Text" xml:space="preserve">
    <value>Action attribute</value>
  </data>
  <data name="Process.Created.Header" xml:space="preserve">
    <value>Creation date</value>
  </data>
  <data name="Process.Hide.Header" xml:space="preserve">
    <value>Hide the window at runtime</value>
  </data>
  <data name="Process.Times.Header" xml:space="preserve">
    <value>Number of runs</value>
  </data>
  <data name="Process.Concurrently.Header" xml:space="preserve">
    <value>Concurrency quantity</value>
  </data>
  <data name="Process.Output.Header" xml:space="preserve">
    <value>Output more logs</value>
  </data>
  <data name="Process.Process.Header" xml:space="preserve">
    <value>Main flow</value>
  </data>
  <data name="Process.Description.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Page.Output.Header" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="Page.Resource.Header" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="Page.Variable.Header" xml:space="preserve">
    <value>Variable</value>
  </data>
  <data name="Page.Record.Header" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="ToolBar.About.Label" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ToolBar.Help.Label" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="ToolBar.Register.Label" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="BlankPage.Buy.Text" xml:space="preserve">
    <value>Support purchase</value>
  </data>
  <data name="Rename.Title" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="Variable.Title" xml:space="preserve">
    <value>Variable</value>
  </data>
  <data name="AndroidPackage.Title" xml:space="preserve">
    <value>Android package</value>
  </data>
  <data name="Close.Text" xml:space="preserve">
    <value>Shut down</value>
  </data>
  <data name="Workflow.MenuItem.Visible.Text" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="Workflow.MenuItem.Preview.Text" xml:space="preserve">
    <value>Open preview</value>
  </data>
  <data name="Workflow.MenuItem.Open.Text" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Workflow.MenuItem.Remove.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Workflow.MenuItem.PreviewAll.Text" xml:space="preserve">
    <value>Open preview (all actions)</value>
  </data>
  <data name="Workflow.MenuItem.UnPreviewAll.Text" xml:space="preserve">
    <value>Close preview (all actions)</value>
  </data>
  <data name="ToolBar.New.Label" xml:space="preserve">
    <value>Newly built</value>
  </data>
  <data name="ToolBar.Open.Label" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="ToolBar.Run.Label" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="ToolBar.Shared.Label" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="ToolBar.SaveAs.Label" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="ToolBar.Save.Label" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ToolBar.Settings.Label" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="Shortcut.MouseGlobalPosition.Text" xml:space="preserve">
    <value>Get mouse position (global)</value>
  </data>
  <data name="Shortcut.MouseWindowPosition.Text" xml:space="preserve">
    <value>Get mouse position (window)</value>
  </data>
  <data name="Shortcut.WindowTitle.Text" xml:space="preserve">
    <value>Get window title</value>
  </data>
  <data name="Shortcut.ColorPicker.Text" xml:space="preserve">
    <value>Pick up color</value>
  </data>
  <data name="Shortcut.WorkRun.Text" xml:space="preserve">
    <value>Running process</value>
  </data>
  <data name="Shortcut.WorkPause.Text" xml:space="preserve">
    <value>Pause process</value>
  </data>
  <data name="RecordWindow.Title" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="StartToRun.Title" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="Head.Text" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Mouse.Description" xml:space="preserve">
    <value>Mouse action</value>
  </data>
  <data name="Mouse.Title" xml:space="preserve">
    <value>Mouse</value>
  </data>
  <data name="MovePointer.Description" xml:space="preserve">
    <value>Move the mouse</value>
  </data>
  <data name="MovePointer.Title" xml:space="preserve">
    <value>Move the mouse</value>
  </data>

  <data name="Click.Description" xml:space="preserve">
    <value>Click</value>
  </data>
  <data name="Click.Title" xml:space="preserve">
    <value>Click</value>
  </data>

  <data name="MoveClick.Description" xml:space="preserve">
    <value>Move + click</value>
  </data>
  <data name="MoveClick.Title" xml:space="preserve">
    <value>Move + click</value>
  </data>

  <data name="DoubleClick.Description" xml:space="preserve">
    <value>Double click</value>
  </data>
  <data name="DoubleClick.Title" xml:space="preserve">
    <value>Double click</value>
  </data>

  <data name="RightClick.Description" xml:space="preserve">
    <value>Right click</value>
  </data>
  <data name="RightClick.Title" xml:space="preserve">
    <value>Right click</value>
  </data>

  <data name="DragPointer.Description" xml:space="preserve">
    <value>Drag</value>
  </data>
  <data name="DragPointer.Title" xml:space="preserve">
    <value>Drag</value>
  </data>

  <data name="ListenMouse.Description" xml:space="preserve">
    <value>Monitor mouse</value>
  </data>
  <data name="ListenMouse.Title" xml:space="preserve">
    <value>Monitor mouse</value>
  </data>

  <data name="System.Description" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="System.Title" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="Wait.Description" xml:space="preserve">
    <value>Wait, can also be called dormancy. it can stop an action for a period of time before continuing to run.</value>
  </data>
  <data name="Wait.Title" xml:space="preserve">
    <value>Wait</value>
  </data>

  <data name="FileQuery.Description" xml:space="preserve">
    <value>Search file</value>
  </data>
  <data name="FileQuery.Title" xml:space="preserve">
    <value>Search file</value>
  </data>

  <data name="StartProcess.Description" xml:space="preserve">
    <value>Start process</value>
  </data>
  <data name="StartProcess.Title" xml:space="preserve">
    <value>Start process</value>
  </data>

  <data name="WindowCapture.Description" xml:space="preserve">
    <value>This action takes a screenshot of the selected window</value>
  </data>
  <data name="WindowCapture.Title" xml:space="preserve">
    <value>Window screenshot</value>
  </data>

  <data name="CropImage.Description" xml:space="preserve">
    <value>This action can select an area on a picture and cut it.</value>
  </data>
  <data name="CropImage.Title" xml:space="preserve">
    <value>Crop picture</value>
  </data>

  <data name="PlayRecord.Description" xml:space="preserve">
    <value>Play and record</value>
  </data>
  <data name="PlayRecord.Title" xml:space="preserve">
    <value>Play and record</value>
  </data>

  <data name="Timer.Description" xml:space="preserve">
    <value>The timer can perform certain actions repeatedly at certain time intervals.</value>
  </data>
  <data name="Timer.Title" xml:space="preserve">
    <value>Timer</value>
  </data>

  <data name="ONNXClassification.Description" xml:space="preserve">
    <value>Target classification</value>
  </data>
  <data name="ONNXClassification.Title" xml:space="preserve">
    <value>Target classification</value>
  </data>

  <data name="Type.Description" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Type.Title" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="TypeUri.Description" xml:space="preserve">
    <value>Create a url</value>
  </data>
  <data name="TypeUri.Title" xml:space="preserve">
    <value>Uri</value>
  </data>

  <data name="TypePassword.Description" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="TypePassword.Title" xml:space="preserve">
    <value>Password</value>
  </data>

  <data name="TypePoint.Description" xml:space="preserve">
    <value>Define a coordinate point</value>
  </data>
  <data name="TypePoint.Title" xml:space="preserve">
    <value>Coordinate</value>
  </data>

  <data name="TypeFile.Description" xml:space="preserve">
    <value>Define file type</value>
  </data>
  <data name="TypeFile.Title" xml:space="preserve">
    <value>File</value>
  </data>

  <data name="TypeFolder.Description" xml:space="preserve">
    <value>Define folder</value>
  </data>
  <data name="TypeFolder.Title" xml:space="preserve">
    <value>Folder</value>
  </data>

  <data name="ClipboardValue.Description" xml:space="preserve">
    <value>Shear plate</value>
  </data>
  <data name="ClipboardValue.Title" xml:space="preserve">
    <value>Shear plate</value>
  </data>

  <data name="TypeShortcut.Description" xml:space="preserve">
    <value>Shortcut key</value>
  </data>
  <data name="TypeShortcut.Title" xml:space="preserve">
    <value>Shortcut key</value>
  </data>

  <data name="Window.Description" xml:space="preserve">
    <value>Window class</value>
  </data>
  <data name="Window.Title" xml:space="preserve">
    <value>Window class</value>
  </data>
  <data name="FindWindow.Description" xml:space="preserve">
    <value>Search for windows. this action searches for windows by window title or window class.</value>
  </data>
  <data name="FindWindow.Title" xml:space="preserve">
    <value>Search window</value>
  </data>

  <data name="Control.Description" xml:space="preserve">
    <value>Logic</value>
  </data>
  <data name="Control.Title" xml:space="preserve">
    <value>Logic</value>
  </data>
  <data name="For.Description" xml:space="preserve">
    <value>Cycle</value>
  </data>
  <data name="For.Title" xml:space="preserve">
    <value>Cycle</value>
  </data>

  <data name="If.Description" xml:space="preserve">
    <value>Conditional, equivalent to the if statement in python, has two branches. if the condition is true, the left branch of the flow is executed; otherwise, the right branch of the flow is executed</value>
  </data>
  <data name="If.Title" xml:space="preserve">
    <value>Judgment</value>
  </data>

  <data name="Invoke.Description" xml:space="preserve">
    <value>This action can invoke other processes (not subprocesses).</value>
  </data>
  <data name="Invoke.Title" xml:space="preserve">
    <value>Call</value>
  </data>

  <data name="Break.Description" xml:space="preserve">
    <value>Stop the cycle</value>
  </data>
  <data name="Break.Title" xml:space="preserve">
    <value>Stop the cycle</value>
  </data>

  <data name="OpenUri.Description" xml:space="preserve">
    <value>This action launches the browser to open the specified url</value>
  </data>
  <data name="OpenUri.Title" xml:space="preserve">
    <value>Open a link</value>
  </data>

  <data name="Code.Description" xml:space="preserve">
    <value>This action executes some python scripts.</value>
  </data>
  <data name="Code.Title" xml:space="preserve">
    <value>Script</value>
  </data>

  <data name="Media.Description" xml:space="preserve">
    <value>Media, including screenshots, sound playback, and other actions</value>
  </data>
  <data name="Media.Title" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="MediaPlay.Description" xml:space="preserve">
    <value>Sound playback</value>
  </data>
  <data name="MediaPlay.Title" xml:space="preserve">
    <value>Sound playback</value>
  </data>

  <data name="Keyboard.Description" xml:space="preserve">
    <value>Keyboard</value>
  </data>
  <data name="Keyboard.Title" xml:space="preserve">
    <value>Keyboard</value>
  </data>
  <data name="SendKey.Description" xml:space="preserve">
    <value>Send button</value>
  </data>
  <data name="SendKey.Title" xml:space="preserve">
    <value>Send button</value>
  </data>

  <data name="SendText.Description" xml:space="preserve">
    <value>Send text</value>
  </data>
  <data name="SendText.Title" xml:space="preserve">
    <value>Send text</value>
  </data>

  <data name="PressKey.Description" xml:space="preserve">
    <value>Press the button</value>
  </data>
  <data name="PressKey.Title" xml:space="preserve">
    <value>Press the button</value>
  </data>

  <data name="ReleaseKey.Description" xml:space="preserve">
    <value>Release key</value>
  </data>
  <data name="ReleaseKey.Title" xml:space="preserve">
    <value>Release key</value>
  </data>

  <data name="ListenKeyboard.Description" xml:space="preserve">
    <value>Monitor keyboard</value>
  </data>
  <data name="ListenKeyboard.Title" xml:space="preserve">
    <value>Monitor keyboard</value>
  </data>

  <data name="Image.Description" xml:space="preserve">
    <value>Image processing</value>
  </data>
  <data name="Image.Title" xml:space="preserve">
    <value>Image processing</value>
  </data>
  <data name="ImageSave.Description" xml:space="preserve">
    <value>Save the image types in the process to the local disk.</value>
  </data>
  <data name="ImageSave.Title" xml:space="preserve">
    <value>Save the picture</value>
  </data>

  <data name="FeatureDetect.Description" xml:space="preserve">
    <value>This action finds an image with certain characteristics within an image</value>
  </data>
  <data name="FeatureDetect.Title" xml:space="preserve">
    <value>Image search</value>
  </data>

  <data name="ExitApp.Description" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExitApp.Title" xml:space="preserve">
    <value>Exit</value>
  </data>

  <data name="ImageLoad.Description" xml:space="preserve">
    <value>Load image</value>
  </data>
  <data name="ImageLoad.Title" xml:space="preserve">
    <value>Load image</value>
  </data>

  <data name="ONNXDetection.Description" xml:space="preserve">
    <value>Object detection</value>
  </data>
  <data name="ONNXDetection.Title" xml:space="preserve">
    <value>Object detection</value>
  </data>

  <data name="PointConvert.Description" xml:space="preserve">
    <value>Window coordinates to screen coordinates, or screen coordinates to window coordinates</value>
  </data>
  <data name="PointConvert.Title" xml:space="preserve">
    <value>Coordinate transformation</value>
  </data>

  <data name="QuitThread.Description" xml:space="preserve">
    <value>Can be used to end an executing thread action.</value>
  </data>
  <data name="QuitThread.Title" xml:space="preserve">
    <value>End thread</value>
  </data>

  <data name="AdbPackages.Description" xml:space="preserve">
    <value>This action will get all the installation packages in the android emulator.</value>
  </data>
  <data name="AdbPackages.Title" xml:space="preserve">
    <value>Installation package</value>
  </data>

  <data name="Filesystem.Description" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Filesystem.Title" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FileRead.Description" xml:space="preserve">
    <value>Read file</value>
  </data>
  <data name="FileRead.Title" xml:space="preserve">
    <value>Read file</value>
  </data>

  <data name="FileWrite.Description" xml:space="preserve">
    <value>File write</value>
  </data>
  <data name="FileWrite.Title" xml:space="preserve">
    <value>File write</value>
  </data>

  <data name="Detection.Description" xml:space="preserve">
    <value>Image detection</value>
  </data>
  <data name="Detection.Title" xml:space="preserve">
    <value>Image detection</value>
  </data>
  <data name="Dnn.Description" xml:space="preserve">
    <value>Deep learning</value>
  </data>
  <data name="Dnn.Title" xml:space="preserve">
    <value>Deep learning</value>
  </data>
  <data name="Drawing.Description" xml:space="preserve">
    <value>Drawing</value>
  </data>
  <data name="Drawing.Title" xml:space="preserve">
    <value>Drawing</value>
  </data>
  <data name="TypeResource.Description" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="TypeResource.Title" xml:space="preserve">
    <value>Resources</value>
  </data>

  <data name="MatchShapes.Description" xml:space="preserve">
    <value>Find shape</value>
  </data>
  <data name="MatchShapes.Title" xml:space="preserve">
    <value>Find shape</value>
  </data>

  <data name="ReadJson.Description" xml:space="preserve">
    <value>Read json</value>
  </data>
  <data name="ReadJson.Title" xml:space="preserve">
    <value>Read json</value>
  </data>

  <data name="RandomNumber.Description" xml:space="preserve">
    <value>Random number generation</value>
  </data>
  <data name="RandomNumber.Title" xml:space="preserve">
    <value>Random number</value>
  </data>

  <data name="Database.Description" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="Database.Title" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="WebWaitFrameAvailable.Description" xml:space="preserve">
    <value>Check whether the given framework can be switched to.</value>
  </data>
  <data name="WebWaitFrameAvailable.Title" xml:space="preserve">
    <value>Wait * frame can be switched</value>
  </data>

  <data name="WebWaitVisibilityByLocator.Description" xml:space="preserve">
    <value>Using a positioning strategy, check that elements known to exist in the dom of the page are visible. visibility means that the element is not only displayed but is both height and width greater than 0</value>
  </data>
  <data name="WebWaitVisibilityByLocator.Title" xml:space="preserve">
    <value>Wait * visible (locator)</value>
  </data>

  <data name="AccessSize.Description" xml:space="preserve">
    <value>Gets the length of an array or list. the action to be accessed must be a container or a list with multiple identical values.</value>
  </data>
  <data name="AccessSize.Title" xml:space="preserve">
    <value>Access length</value>
  </data>

  <data name="Web.Description" xml:space="preserve">
    <value>Browser operation</value>
  </data>
  <data name="Web.Title" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="Network.Description" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="Network.Title" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="WebOpen.Description" xml:space="preserve">
    <value>Open browser, support, open chrome and edge browsers.</value>
  </data>
  <data name="WebOpen.Title" xml:space="preserve">
    <value>Open a browser</value>
  </data>

  <data name="WebWaitTitle.Description" xml:space="preserve">
    <value>Check that the title contains a case-sensitive string.</value>
  </data>
  <data name="WebWaitTitle.Title" xml:space="preserve">
    <value>Wait * title</value>
  </data>

  <data name="WebElementSubmit.Description" xml:space="preserve">
    <value>Form submission</value>
  </data>
  <data name="WebElementSubmit.Title" xml:space="preserve">
    <value>Form submission</value>
  </data>

  <data name="WebGetElement.Description" xml:space="preserve">
    <value>Find web elements</value>
  </data>
  <data name="WebGetElement.Title" xml:space="preserve">
    <value>Lookup element</value>
  </data>

  <data name="HttpDownload.Description" xml:space="preserve">
    <value>This action downloads network files over http.</value>
  </data>
  <data name="HttpDownload.Title" xml:space="preserve">
    <value>Download</value>
  </data>

  <data name="WebElementAttribute.Description" xml:space="preserve">
    <value>Get attribute</value>
  </data>
  <data name="WebElementAttribute.Title" xml:space="preserve">
    <value>Get attribute</value>
  </data>

  <data name="WebCookies.Description" xml:space="preserve">
    <value>Get cookies</value>
  </data>
  <data name="WebCookies.Title" xml:space="preserve">
    <value>Get cookies</value>
  </data>

  <data name="WebWaitPresence.Description" xml:space="preserve">
    <value>Checking to see if the element exists in the dom of the page does not necessarily mean that the element is visible.</value>
  </data>
  <data name="WebWaitPresence.Title" xml:space="preserve">
    <value>Wait for the * element to render</value>
  </data>

  <data name="ArithmeticCalculate.Description" xml:space="preserve">
    <value>Perform the (+ - * /) arithmetic operation</value>
  </data>
  <data name="ArithmeticCalculate.Title" xml:space="preserve">
    <value>Arithmetic operation</value>
  </data>

  <data name="Algorithm.Description" xml:space="preserve">
    <value>Algorithm</value>
  </data>
  <data name="Algorithm.Title" xml:space="preserve">
    <value>Algorithm</value>
  </data>
  <data name="FindContours.Description" xml:space="preserve">
    <value>Find contour</value>
  </data>
  <data name="FindContours.Title" xml:space="preserve">
    <value>Find contour</value>
  </data>

  <data name="ImageMorphological.Description" xml:space="preserve">
    <value>Expansion</value>
  </data>
  <data name="ImageMorphological.Title" xml:space="preserve">
    <value>Expansion</value>
  </data>

  <data name="PaddleTextDetection.Description" xml:space="preserve">
    <value>Text detection</value>
  </data>
  <data name="PaddleTextDetection.Title" xml:space="preserve">
    <value>Text detection</value>
  </data>

  <data name="NetUserAdd.Description" xml:space="preserve">
    <value>This action adds an account to the operating system.</value>
  </data>
  <data name="NetUserAdd.Title" xml:space="preserve">
    <value>Add a user</value>
  </data>

  <data name="TypeRect.Description" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="TypeRect.Title" xml:space="preserve">
    <value>Rectangle</value>
  </data>

  <data name="SplitString.Description" xml:space="preserve">
    <value>Split string</value>
  </data>
  <data name="SplitString.Title" xml:space="preserve">
    <value>Split string</value>
  </data>

  <data name="TypeScalar.Description" xml:space="preserve">
    <value>Scalar</value>
  </data>
  <data name="TypeScalar.Title" xml:space="preserve">
    <value>Scalar</value>
  </data>

  <data name="SpecialWindow.Description" xml:space="preserve">
    <value>This action is used to select a specific window that is known.</value>
  </data>
  <data name="SpecialWindow.Title" xml:space="preserve">
    <value>Specific window</value>
  </data>

  <data name="SendKeyMessage.Description" xml:space="preserve">
    <value>Send keyboard message</value>
  </data>
  <data name="SendKeyMessage.Title" xml:space="preserve">
    <value>Send keyboard message</value>
  </data>

  <data name="OpenApplication.Description" xml:space="preserve">
    <value>Open the software in windows. this action does not wait for the program to end.</value>
  </data>
  <data name="OpenApplication.Title" xml:space="preserve">
    <value>Open the application</value>
  </data>

  <data name="NameAlias.Description" xml:space="preserve">
    <value>This action refers by name to a passing action that can be used in the process.</value>
  </data>
  <data name="NameAlias.Title" xml:space="preserve">
    <value>Reference action (name)</value>
  </data>

  <data name="LaunchFile.Description" xml:space="preserve">
    <value>This action opens files that have been associated with file types in the operating system.</value>
  </data>
  <data name="LaunchFile.Title" xml:space="preserve">
    <value>Open file</value>
  </data>

  <data name="PaddleTextRecognition.Description" xml:space="preserve">
    <value>Text recognition</value>
  </data>
  <data name="PaddleTextRecognition.Title" xml:space="preserve">
    <value>Text recognition</value>
  </data>

  <data name="WebSwitchToFrame.Description" xml:space="preserve">
    <value>Switch focus to the specified frame</value>
  </data>
  <data name="WebSwitchToFrame.Title" xml:space="preserve">
    <value>Switching frame</value>
  </data>

  <data name="WebFocusFrameDefault.Description" xml:space="preserve">
    <value>Switch focus to the default framework.</value>
  </data>
  <data name="WebFocusFrameDefault.Title" xml:space="preserve">
    <value>Frame * sets the focus</value>
  </data>

  <data name="WebActionChainsCreated.Description" xml:space="preserve">
    <value>Create a web action chain</value>
  </data>
  <data name="WebActionChainsCreated.Title" xml:space="preserve">
    <value>Action chain * created</value>
  </data>

  <data name="WebActionClick.Description" xml:space="preserve">
    <value>Click on a web element that needs to be added to the action chain.</value>
  </data>
  <data name="WebActionClick.Title" xml:space="preserve">
    <value>Action chain. click</value>
  </data>

  <data name="When.Description" xml:space="preserve">
    <value>This action starts a thread that keeps checking until the condition is correct.</value>
  </data>
  <data name="When.Title" xml:space="preserve">
    <value>When... be established</value>
  </data>

  <data name="WebScreenshot.Description" xml:space="preserve">
    <value>Element screenshots or page screenshots</value>
  </data>
  <data name="WebScreenshot.Title" xml:space="preserve">
    <value>Element screenshot</value>
  </data>

  <data name="PressAndReleaseKey.Description" xml:space="preserve">
    <value>Press and release</value>
  </data>
  <data name="PressAndReleaseKey.Title" xml:space="preserve">
    <value>Press and release</value>
  </data>

  <data name="ShowMessageBox.Description" xml:space="preserve">
    <value>Prompt box</value>
  </data>
  <data name="ShowMessageBox.Title" xml:space="preserve">
    <value>Prompt box</value>
  </data>

  <data name="MoveOffset.Description" xml:space="preserve">
    <value>Offset move</value>
  </data>
  <data name="MoveOffset.Title" xml:space="preserve">
    <value>Offset move</value>
  </data>

  <data name="TextChinese.Description" xml:space="preserve">
    <value>Identify the chinese text in the picture.</value>
  </data>
  <data name="TextChinese.Title" xml:space="preserve">
    <value>Chinese recognition</value>
  </data>

  <data name="ResizeImage.Description" xml:space="preserve">
    <value>Resize</value>
  </data>
  <data name="ResizeImage.Title" xml:space="preserve">
    <value>Resize</value>
  </data>

  <data name="CenterCropImage.Description" xml:space="preserve">
    <value>Cropping the picture from the center</value>
  </data>
  <data name="CenterCropImage.Title" xml:space="preserve">
    <value>Cropped picture</value>
  </data>

  <data name="WinRun.Description" xml:space="preserve">
    <value>Open the run dialog box in the operating system</value>
  </data>
  <data name="WinRun.Title" xml:space="preserve">
    <value>Run dialog</value>
  </data>

  <data name="HttpGet.Description" xml:space="preserve">
    <value>Http get request</value>
  </data>
  <data name="HttpGet.Title" xml:space="preserve">
    <value>Get</value>
  </data>

  <data name="ONNXModel.Description" xml:space="preserve">
    <value>Load onnx model files</value>
  </data>
  <data name="ONNXModel.Title" xml:space="preserve">
    <value>Model</value>
  </data>

  <data name="WebWaitVisibilityByElement.Description" xml:space="preserve">
    <value>Checks if an element known to exist on the page dom is visible through a known element, and visibility means that the element is not only displayed but also has a height and width greater than 0</value>
  </data>
  <data name="WebWaitVisibilityByElement.Title" xml:space="preserve">
    <value>Wait * visible</value>
  </data>

  <data name="WebWaitAlert.Description" xml:space="preserve">
    <value>Check if an alarm currently exists and switch to it.</value>
  </data>
  <data name="WebWaitAlert.Title" xml:space="preserve">
    <value>Wait for * warning box</value>
  </data>

  <data name="WebWaitClickable.Description" xml:space="preserve">
    <value>Used to check that the element is visible and enabled so that you can click on it.</value>
  </data>
  <data name="WebWaitClickable.Title" xml:space="preserve">
    <value>Wait * clickable</value>
  </data>

  <data name="BlobDetect.Description" xml:space="preserve">
    <value>Blob lookup</value>
  </data>
  <data name="BlobDetect.Title" xml:space="preserve">
    <value>Blob</value>
  </data>

  <data name="FilterVertex.Description" xml:space="preserve">
    <value>Vertex filtering</value>
  </data>
  <data name="FilterVertex.Title" xml:space="preserve">
    <value>Vertex filtering</value>
  </data>

  <data name="CalculateCenter.Description" xml:space="preserve">
    <value>Location of computing center</value>
  </data>
  <data name="CalculateCenter.Title" xml:space="preserve">
    <value>Center coordinate</value>
  </data>

  <data name="CaptureFullScreen.Description" xml:space="preserve">
    <value>Full screen screenshot</value>
  </data>
  <data name="CaptureFullScreen.Title" xml:space="preserve">
    <value>Full screen screenshot</value>
  </data>

  <data name="SendMouseClick.Description" xml:space="preserve">
    <value>Send mouse message</value>
  </data>
  <data name="SendMouseClick.Title" xml:space="preserve">
    <value>Send mouse message</value>
  </data>

  <data name="YoutubeDownload.Description" xml:space="preserve">
    <value>Youtube video download</value>
  </data>
  <data name="YoutubeDownload.Title" xml:space="preserve">
    <value>Youtube video download</value>
  </data>

  <data name="DirectoryIterator.Description" xml:space="preserve">
    <value>Iterate through folders</value>
  </data>
  <data name="DirectoryIterator.Title" xml:space="preserve">
    <value>Iterate through folders</value>
  </data>

  <data name="CopyFile.Description" xml:space="preserve">
    <value>Copy files</value>
  </data>
  <data name="CopyFile.Title" xml:space="preserve">
    <value>Copy files</value>
  </data>

  <data name="CodeExpression.Description" xml:space="preserve">
    <value>This action can execute python expressions.</value>
  </data>
  <data name="CodeExpression.Title" xml:space="preserve">
    <value>Expression</value>
  </data>

  <data name="KillProcess.Description" xml:space="preserve">
    <value>This action can end a process in the operating system</value>
  </data>
  <data name="KillProcess.Title" xml:space="preserve">
    <value>Terminate the process</value>
  </data>

  <data name="ActionAlias.Description" xml:space="preserve">
    <value>This action is used to refer to a pass-by action that can be used in the process.</value>
  </data>
  <data name="ActionAlias.Title" xml:space="preserve">
    <value>Reference action</value>
  </data>

  <data name="WindowTitle.Description" xml:space="preserve">
    <value>Find line</value>
  </data>
  <data name="WindowTitle.Title" xml:space="preserve">
    <value>Find line</value>
  </data>

  <data name="FastLineDetection.Description" xml:space="preserve">
    <value>Find line</value>
  </data>
  <data name="FastLineDetection.Title" xml:space="preserve">
    <value>Find line</value>
  </data>

  <data name="EdgeLineDetection.Description" xml:space="preserve">
    <value>Find line</value>
  </data>
  <data name="EdgeLineDetection.Title" xml:space="preserve">
    <value>Find line</value>
  </data>

  <data name="EllipseDetection.Description" xml:space="preserve">
    <value>Detect a circle or ellipse in an image</value>
  </data>
  <data name="EllipseDetection.Title" xml:space="preserve">
    <value>Ellipse detection</value>
  </data>

  <data name="CvtColor.Description" xml:space="preserve">
    <value>Color conversion</value>
  </data>
  <data name="CvtColor.Title" xml:space="preserve">
    <value>Color conversion</value>
  </data>

  <data name="ImageCanny.Description" xml:space="preserve">
    <value>Edge detection</value>
  </data>
  <data name="ImageCanny.Title" xml:space="preserve">
    <value>Edge detection</value>
  </data>

  <data name="ImageThreshold.Description" xml:space="preserve">
    <value>The action may perform a 2 valuing operation on the image. it can be understood as turning the image into a grayscale image according to a certain threshold condition.</value>
  </data>
  <data name="ImageThreshold.Title" xml:space="preserve">
    <value>2 valuing</value>
  </data>

  <data name="ImageInRange.Description" xml:space="preserve">
    <value>Inrange</value>
  </data>
  <data name="ImageInRange.Title" xml:space="preserve">
    <value>Inrange</value>
  </data>

  <data name="MoveDoubleClick.Description" xml:space="preserve">
    <value>Image corrosion</value>
  </data>
  <data name="MoveDoubleClick.Title" xml:space="preserve">
    <value>Corrosion</value>
  </data>

  <data name="ConnectedComponents.Description" xml:space="preserve">
    <value>Connected components</value>
  </data>
  <data name="ConnectedComponents.Title" xml:space="preserve">
    <value>Connected components</value>
  </data>

  <data name="ImageBlur.Description" xml:space="preserve">
    <value>Fuzzy</value>
  </data>
  <data name="ImageBlur.Title" xml:space="preserve">
    <value>Fuzzy</value>
  </data>

  <data name="ApproxPolyDP.Description" xml:space="preserve">
    <value>Approxpolydp</value>
  </data>
  <data name="ApproxPolyDP.Title" xml:space="preserve">
    <value>Approxpolydp</value>
  </data>

  <data name="FindNonZero.Description" xml:space="preserve">
    <value>On a picture, look for non-zero pixels.</value>
  </data>
  <data name="FindNonZero.Title" xml:space="preserve">
    <value>Non-zero pixel point</value>
  </data>

  <data name="WorkThread.Description" xml:space="preserve">
    <value>Threads can be used to perform some actions asynchronously.</value>
  </data>
  <data name="WorkThread.Title" xml:space="preserve">
    <value>Thread</value>
  </data>

  <data name="SetForegroundWindow.Description" xml:space="preserve">
    <value>Front window</value>
  </data>
  <data name="SetForegroundWindow.Title" xml:space="preserve">
    <value>Front window</value>
  </data>

  <data name="ShutdownSystem.Description" xml:space="preserve">
    <value>This action can shut down the operating system, that is, the computer shuts down.</value>
  </data>
  <data name="ShutdownSystem.Title" xml:space="preserve">
    <value>Shutdown</value>
  </data>

  <data name="TimedTask.Description" xml:space="preserve">
    <value>The action is triggered at a specified time and the corresponding sub-actions can be executed.</value>
  </data>
  <data name="TimedTask.Title" xml:space="preserve">
    <value>Scheduled tasks</value>
  </data>

  <data name="HttpPost.Description" xml:space="preserve">
    <value>Send http post request</value>
  </data>
  <data name="HttpPost.Title" xml:space="preserve">
    <value>Post</value>
  </data>

  <data name="HttpHead.Description" xml:space="preserve">
    <value>Http head request</value>
  </data>
  <data name="HttpHead.Title" xml:space="preserve">
    <value>Head</value>
  </data>

  <data name="Android.Description" xml:space="preserve">
    <value>Android</value>
  </data>
  <data name="Android.Title" xml:space="preserve">
    <value>Android</value>
  </data>
  <data name="AdbKillServer.Description" xml:space="preserve">
    <value>Termination of service</value>
  </data>
  <data name="AdbKillServer.Title" xml:space="preserve">
    <value>Termination of service</value>
  </data>

  <data name="AdbDevices.Description" xml:space="preserve">
    <value>Query the android emulator already started in the system.</value>
  </data>
  <data name="AdbDevices.Title" xml:space="preserve">
    <value>Equipment list</value>
  </data>

  <data name="AdbStartServer.Description" xml:space="preserve">
    <value>Start service</value>
  </data>
  <data name="AdbStartServer.Title" xml:space="preserve">
    <value>Start service</value>
  </data>

  <data name="AdbForward.Description" xml:space="preserve">
    <value>Map android ports to local ports.</value>
  </data>
  <data name="AdbForward.Title" xml:space="preserve">
    <value>Forwarding</value>
  </data>

  <data name="AdbConnect.Description" xml:space="preserve">
    <value>The main application in the simulator is not on this machine, but on another computer.</value>
  </data>
  <data name="AdbConnect.Title" xml:space="preserve">
    <value>Connection</value>
  </data>

  <data name="AdbIfConfig.Description" xml:space="preserve">
    <value>View nic configuration</value>
  </data>
  <data name="AdbIfConfig.Title" xml:space="preserve">
    <value>View nic configuration</value>
  </data>

  <data name="AdbRemoveForward.Description" xml:space="preserve">
    <value>Remove port forwarding in the current system.</value>
  </data>
  <data name="AdbRemoveForward.Title" xml:space="preserve">
    <value>Remove forwarding</value>
  </data>

  <data name="ReadLines.Description" xml:space="preserve">
    <value>Read multi-line file</value>
  </data>
  <data name="ReadLines.Title" xml:space="preserve">
    <value>Read multi-line file</value>
  </data>

  <data name="AdbSwipe.Description" xml:space="preserve">
    <value>Sliding operation is realized in android simulator.</value>
  </data>
  <data name="AdbSwipe.Title" xml:space="preserve">
    <value>Slide</value>
  </data>

  <data name="AdbInput.Description" xml:space="preserve">
    <value>Simulate input text in the android simulator, this action does not support chinese input.</value>
  </data>
  <data name="AdbInput.Title" xml:space="preserve">
    <value>Input</value>
  </data>

  <data name="AdbKey.Description" xml:space="preserve">
    <value>Simulate keystrokes in the android simulator.</value>
  </data>
  <data name="AdbKey.Title" xml:space="preserve">
    <value>Key</value>
  </data>

  <data name="AdbTap.Description" xml:space="preserve">
    <value>Simulate a click in the android simulator.</value>
  </data>
  <data name="AdbTap.Title" xml:space="preserve">
    <value>Click</value>
  </data>

  <data name="AdbScreenCap.Description" xml:space="preserve">
    <value>Simulator screenshots.</value>
  </data>
  <data name="AdbScreenCap.Title" xml:space="preserve">
    <value>Screenshot</value>
  </data>

  <data name="AccessArray.Description" xml:space="preserve">
    <value>Gets the value in an action based on the index. this action must have multiple identical values.</value>
  </data>
  <data name="AccessArray.Title" xml:space="preserve">
    <value>Access array</value>
  </data>

  <data name="BaiduTranslate.Description" xml:space="preserve">
    <value>Baidu translation</value>
  </data>
  <data name="BaiduTranslate.Title" xml:space="preserve">
    <value>Baidu translation</value>
  </data>

  <data name="AdbStartApp.Description" xml:space="preserve">
    <value>This action can open the app on the android simulator.</value>
  </data>
  <data name="AdbStartApp.Title" xml:space="preserve">
    <value>Open app</value>
  </data>

  <data name="AccessKey.Description" xml:space="preserve">
    <value>Gets the value of the object based on the specified name</value>
  </data>
  <data name="AccessKey.Title" xml:space="preserve">
    <value>Access key</value>
  </data>

  <data name="CaptureForground.Description" xml:space="preserve">
    <value>Front window screenshot</value>
  </data>
  <data name="CaptureForground.Title" xml:space="preserve">
    <value>Front window screenshot</value>
  </data>

  <data name="Cloud.Description" xml:space="preserve">
    <value>Cloud</value>
  </data>
  <data name="Cloud.Title" xml:space="preserve">
    <value>Cloud</value>
  </data>
  <data name="Xml.Description" xml:space="preserve">
    <value>Xml</value>
  </data>
  <data name="Xml.Title" xml:space="preserve">
    <value>Xml</value>
  </data>
  <data name="XmlLoadDocument.Description" xml:space="preserve">
    <value>Xmlloaddocument</value>
  </data>
  <data name="XmlLoadDocument.Title" xml:space="preserve">
    <value>Xmlloaddocument</value>
  </data>

  <data name="Json.Description" xml:space="preserve">
    <value>Json</value>
  </data>
  <data name="Json.Title" xml:space="preserve">
    <value>Json</value>
  </data>
  <data name="XmlGetNodeList.Description" xml:space="preserve">
    <value>Xmlgetnodelist</value>
  </data>
  <data name="XmlGetNodeList.Title" xml:space="preserve">
    <value>Xmlgetnodelist</value>
  </data>

  <data name="XmlNodeName.Description" xml:space="preserve">
    <value>Xmlnodename</value>
  </data>
  <data name="XmlNodeName.Title" xml:space="preserve">
    <value>Xmlnodename</value>
  </data>

  <data name="FilterText.Description" xml:space="preserve">
    <value>The action can filter an array containing strings</value>
  </data>
  <data name="FilterText.Title" xml:space="preserve">
    <value>Filter string</value>
  </data>

  <data name="XmlDocumentElement.Description" xml:space="preserve">
    <value>Xmldocumentelement</value>
  </data>
  <data name="XmlDocumentElement.Title" xml:space="preserve">
    <value>Xmldocumentelement</value>
  </data>

  <data name="XmlReplaceText.Description" xml:space="preserve">
    <value>Xmlreplacetext</value>
  </data>
  <data name="XmlReplaceText.Title" xml:space="preserve">
    <value>Xmlreplacetext</value>
  </data>

  <data name="XmlSaveDocument.Description" xml:space="preserve">
    <value>Save xml file</value>
  </data>
  <data name="XmlSaveDocument.Title" xml:space="preserve">
    <value>Save</value>
  </data>

  <data name="InputFlyoutItem.Actions.Text" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="InputFlyoutItem.Expression.Text" xml:space="preserve">
    <value>Expression</value>
  </data>
  <data name="InputFlyoutItem.Text.Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="InputFlyoutItem.Url.Text" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="InputFlyoutItem.Boolean.Text" xml:space="preserve">
    <value>Boolean</value>
  </data>
  <data name="InputFlyoutItem.Number.Text" xml:space="preserve">
    <value>Numbers</value>
  </data>
  <data name="InputFlyoutItem.Point.Text" xml:space="preserve">
    <value>Coordinates</value>
  </data>
  <data name="InputFlyoutItem.FolderPicker.Text" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="InputFlyoutItem.FilePicker.Text" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="InputFlyoutItem.KeySequence.Text" xml:space="preserve">
    <value>Keyboard</value>
  </data>
  <data name="InputFlyoutItem.Resource.Text" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="InputFlyoutItem.Scalar.Text" xml:space="preserve">
    <value>Scalar</value>
  </data>
  <data name="InputFlyoutItem.Range.Text" xml:space="preserve">
    <value>Scope</value>
  </data>
    <data name="InputFlyoutItem.Color.Text" xml:space="preserve">
    <value>Color</value>
  </data>
    <data name="InputFlyoutItem.Rect.Text" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ProcessID.Description" xml:space="preserve">
    <value>Processes can be executed concurrently, and when they are executed concurrently, multiple processes are started, and each running process has a unique numeric flag that increments from 0.</value>
  </data>
  <data name="ProcessID.Title" xml:space="preserve">
    <value>Process flag</value>
  </data>

  <data name="PaddleTextDirectionClassifier.Description" xml:space="preserve">
    <value>Text direction classification</value>
  </data>
  <data name="PaddleTextDirectionClassifier.Title" xml:space="preserve">
    <value>Text direction classification</value>
  </data>

  <data name="InputParam.Description" xml:space="preserve">
    <value>The value passed in by the parent action.</value>
  </data>
  <data name="InputParam.Title" xml:space="preserve">
    <value>Incoming parameters</value>
  </data>

  <data name="WebActionChainsPerform.Description" xml:space="preserve">
    <value>Execute the created action chain.</value>
  </data>
  <data name="WebActionChainsPerform.Title" xml:space="preserve">
    <value>Action chain * execution</value>
  </data>

  <data name="WebElementSendKey.Description" xml:space="preserve">
    <value>Send button</value>
  </data>
  <data name="WebElementSendKey.Title" xml:space="preserve">
    <value>Send button</value>
  </data>

  <data name="WebElementClick.Description" xml:space="preserve">
    <value>Click</value>
  </data>
  <data name="WebElementClick.Title" xml:space="preserve">
    <value>Click</value>
  </data>

  <data name="WebElementClear.Description" xml:space="preserve">
    <value>Clears the text if it is a text input element.</value>
  </data>
  <data name="WebElementClear.Title" xml:space="preserve">
    <value>Clear text</value>
  </data>

  <data name="WebElementIsSelect.Description" xml:space="preserve">
    <value>Returns whether the element is selected, which can be used to check whether a check box or radio button is selected.</value>
  </data>
  <data name="WebElementIsSelect.Title" xml:space="preserve">
    <value>Check selected</value>
  </data>

  <data name="WebElementSendText.Description" xml:space="preserve">
    <value>Sends text to the currently focused web element.</value>
  </data>
  <data name="WebElementSendText.Title" xml:space="preserve">
    <value>Send text</value>
  </data>

  <data name="WebActionClickHold.Description" xml:space="preserve">
    <value>Hold down the left mouse button on the element, this action needs to be added to the action chain.</value>
  </data>
  <data name="WebActionClickHold.Title" xml:space="preserve">
    <value>Action chain. tap</value>
  </data>

  <data name="WebActionDoubleClick.Description" xml:space="preserve">
    <value>Double-click an element and this action needs to be added to the action chain.</value>
  </data>
  <data name="WebActionDoubleClick.Title" xml:space="preserve">
    <value>Action chain. double click</value>
  </data>

  <data name="WebActionMoveTo.Description" xml:space="preserve">
    <value>Move the mouse over the element.</value>
  </data>
  <data name="WebActionMoveTo.Title" xml:space="preserve">
    <value>Action chain. move</value>
  </data>

  <data name="WebActionRelease.Description" xml:space="preserve">
    <value>Release the mouse button held down on the element.</value>
  </data>
  <data name="WebActionRelease.Title" xml:space="preserve">
    <value>Action chain. release</value>
  </data>

  <data name="WebActionDragDrop.Description" xml:space="preserve">
    <value>Hold down the left mouse button on the source element, then move to the target element and release the mouse.</value>
  </data>
  <data name="WebActionDragDrop.Title" xml:space="preserve">
    <value>Action chain. drag and drop</value>
  </data>

  <data name="WebActionKeyDown.Description" xml:space="preserve">
    <value>Only the key is sent, not released. can be used only with (control, alt, and shift).</value>
  </data>
  <data name="WebActionKeyDown.Title" xml:space="preserve">
    <value>Action chain. key</value>
  </data>

  <data name="WebActionKeyUp.Description" xml:space="preserve">
    <value>Release modifier key</value>
  </data>
  <data name="WebActionKeyUp.Title" xml:space="preserve">
    <value>Action chain. release key</value>
  </data>

  <data name="WebActionMoveOffset.Description" xml:space="preserve">
    <value>Moves the mouse to the offset of the current mouse position or the specified web element.</value>
  </data>
  <data name="WebActionMoveOffset.Title" xml:space="preserve">
    <value>Action chain. move (offset)</value>
  </data>

  <data name="WebActionSendText.Description" xml:space="preserve">
    <value>Set text</value>
  </data>
  <data name="WebActionSendText.Title" xml:space="preserve">
    <value>Action chain. send text</value>
  </data>

  <data name="LoggingEnabled.Description" xml:space="preserve">
    <value>This action is used to individually control the output log</value>
  </data>
  <data name="LoggingEnabled.Title" xml:space="preserve">
    <value>Output</value>
  </data>

  <data name="AdaptiveThreshold.Description" xml:space="preserve">
    <value>Adaptive 2 valuing</value>
  </data>
  <data name="AdaptiveThreshold.Title" xml:space="preserve">
    <value>Adaptive 2 valuing</value>
  </data>

  <data name="GroupAction.Description" xml:space="preserve">
    <value>This action can group related actions on the view, which is more logical.</value>
  </data>
  <data name="GroupAction.Title" xml:space="preserve">
    <value>Grouping</value>
  </data>

  <data name="AdbMove.Description" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="AdbMove.Title" xml:space="preserve">
    <value>Move</value>
  </data>

  <data name="TcpListen.Description" xml:space="preserve">
    <value>This action is used to create a tcp or udp server.</value>
  </data>
  <data name="TcpListen.Title" xml:space="preserve">
    <value>Listening</value>
  </data>

  <data name="TcpSend.Description" xml:space="preserve">
    <value>This action sends data over tcp or udp.</value>
  </data>
  <data name="TcpSend.Title" xml:space="preserve">
    <value>Send</value>
  </data>

  <data name="TcpReceive.Description" xml:space="preserve">
    <value>This action receives data over tcp or udp.</value>
  </data>
  <data name="TcpReceive.Title" xml:space="preserve">
    <value>Receive</value>
  </data>

  <data name="TcpConnect.Description" xml:space="preserve">
    <value>This action connects to the server via tcp or udp.</value>
  </data>
  <data name="TcpConnect.Title" xml:space="preserve">
    <value>Connection</value>
  </data>

  <data name="FilterArea.Description" xml:space="preserve">
    <value>Area filtration</value>
  </data>
  <data name="FilterArea.Title" xml:space="preserve">
    <value>Area filtration</value>
  </data>

  <data name="FilterPerimeter.Description" xml:space="preserve">
    <value>Filterperimeter</value>
  </data>
  <data name="FilterPerimeter.Title" xml:space="preserve">
    <value>Filterperimeter</value>
  </data>

  <data name="ColorPercentage.Description" xml:space="preserve">
    <value>This action can count the proportion of a 1 color in the image.</value>
  </data>
  <data name="ColorPercentage.Title" xml:space="preserve">
    <value>Color statistics</value>
  </data>

  <data name="WindowVisible.Description" xml:space="preserve">
    <value>This action is used to set the window to show or hide.</value>
  </data>
  <data name="WindowVisible.Title" xml:space="preserve">
    <value>Window visible</value>
  </data>

  <data name="TypeColor.Description" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="TypeColor.Title" xml:space="preserve">
    <value>Color</value>
  </data>

  <data name="DrawDetectResults.Description" xml:space="preserve">
    <value>Draw object detection results</value>
  </data>
  <data name="DrawDetectResults.Title" xml:space="preserve">
    <value>Tag object</value>
  </data>

  <data name="FilterEllipse.Description" xml:space="preserve">
    <value>The action can filter the ellipses detected by the ellipse detection action</value>
  </data>
  <data name="FilterEllipse.Title" xml:space="preserve">
    <value>Elliptical filtering</value>
  </data>

  <data name="CloseHandle.Description" xml:space="preserve">
    <value>Close the handle opened by the application degree.</value>
  </data>
  <data name="CloseHandle.Title" xml:space="preserve">
    <value>Close handle</value>
  </data>

  <data name="Empty.Description" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="Empty.Title" xml:space="preserve">
    <value>Empty</value>
  </data>

  <data name="EnumWindows.Description" xml:space="preserve">
    <value>Enumeration window</value>
  </data>
  <data name="EnumWindows.Title" xml:space="preserve">
    <value>Enumeration window</value>
  </data>

  <data name="FilterWindows.Description" xml:space="preserve">
    <value>Window filtering</value>
  </data>
  <data name="FilterWindows.Title" xml:space="preserve">
    <value>Filterwindows</value>
  </data>

  <data name="Workflow.MenuItem.Add.Text" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Workflow.MenuItem.Copy.Text" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Workflow.MenuItem.Locate.Text" xml:space="preserve">
    <value>Positioning</value>
  </data>

  <data name="MatchTemplate.Description" xml:space="preserve">
    <value>Simple picture search, suitable for scenes with fixed pixels</value>
  </data>
  <data name="MatchTemplate.Title" xml:space="preserve">
    <value>Template matching</value>
  </data>


  <data name="LogicalOperator.Description" xml:space="preserve">
    <value>Logicaloperator</value>
  </data>
  <data name="LogicalOperator.Title" xml:space="preserve">
    <value>Logicaloperator</value>
  </data>


  <data name="RelationalOperator.Description" xml:space="preserve">
    <value>The relational operation is used to compare two operand values, and the relational operation returns a boolean value, that is, true or false, depending on the value of the operand.</value>
  </data>
  <data name="RelationalOperator.Title" xml:space="preserve">
    <value>Relational operation</value>
  </data>


  <data name="ImageMarkROI.Description" xml:space="preserve">
    <value>Mark the area of interest in the picture, for example, when looking for a picture, only find the picture from this area.</value>
  </data>
  <data name="ImageMarkROI.Title" xml:space="preserve">
    <value>Mark roi</value>
  </data>


  <data name="TypeString.Description" xml:space="preserve">
    <value>Defines a string</value>
  </data>
  <data name="TypeString.Title" xml:space="preserve">
    <value>String</value>
  </data>


</root>
